name: "ubuntu-x64-CodeQL Analysis"

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '/vcpkg/packages/**'
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
    paths-ignore:
      - '/vcpkg/packages/**'

env:
  # Path to the CMake build directory.
  build: "${{ github.workspace }}/build"
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ninja-build

    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        key: vcpkg-linux
        path: vcpkg

    - name: Set up vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git || git -C vcpkg pull --ff
        ./vcpkg/bootstrap-vcpkg.sh
        ./vcpkg/vcpkg integrate install

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    - name: Configure CMake in Debug mode
      run: cmake -S . -B ${{ env.build }} --preset=linux-x64-gnu-shared -DWOLF_FEATURES_ALL=ON
 
    - name: Build CMake in Debug mode
      run: cmake --build ${{ env.build }} --config Debug

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
    
    - name: Build CMake in Release mode
      run: cmake --build ${{ env.build }} --config Release
